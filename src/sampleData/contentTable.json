[
    {
        "id": 1,
        "category": "HTML",
        "title": "HTML이란?",
        "content": "HTML은 웹 페이지를 만들기 위한 기본 언어입니다. HTML은 Hyper Text Markup Language의 약자로, 웹 페이지의 구조를 정의하는 데 사용됩니다. HTML 요소는 태그로 구성되어 있으며, 이러한 태그는 브라우저가 웹 페이지의 내용을 렌더링하는 방법을 지정합니다.",
        "summary": "HTML: Hyper Text Markup Language",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Learn, #Code, #HTML",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML1.jpg"
    },
    {
        "id": 2,
        "category": "HTML",
        "title": "HTML 태그 우선순위",
        "content": "HTML 태그는 웹 페이지를 구성하는데 중요한 역할을 합니다. 이 글에서는 자주 사용되는 HTML 태그를 중심으로 그 우선순위를 알아보겠습니다. 가장 기본적인 태그로는 html, head, title, body 등이 있습니다. 이러한 기본적인 태그들은 웹 페이지의 구조를 정의하는데 사용됩니다. 그리고 h1부터 h6까지의 제목 태그는 텍스트의 제목을 나타내는데 사용됩니다. 또한 p 태그는 단락을 나타내고, a 태그는 하이퍼링크를 생성하는데 사용됩니다. 이 외에도 이미지를 표시하는 img, 목록을 나타내는 ul과 ol, 표를 나타내는 table 등 다양한 HTML 태그들이 있습니다.",
        "summary": "자주 사용되는 HTML 태그를 소개합니다.",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Learn, #Code, #HTML",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML2.jpg"
    },
    {
        "id": 3,
        "category": "HTML",
        "title": "HTML5의 새로운 기능들",
        "content": "HTML5는 HTML의 최신 표준으로, 웹 페이지와 웹 애플리케이션의 기능을 크게 향상시킵니다. 주요 새로운 기능으로는 canvas 요소를 사용한 2D 그래픽 지원, video와 audio 요소를 통한 멀티미디어 통합, 그리고 section, article, nav, aside 등 새로운 시맨틱 태그들이 있습니다. 이러한 기능들은 웹 개발자들에게 더 많은 도구와 유연성을 제공합니다.",
        "summary": "HTML5의 새로운 기능과 향상점",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#HTML5, #WebDevelopment, #NewFeatures",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML3.jpg"
    },
    {
        "id": 4,
        "category": "HTML",
        "title": "HTML에서 CSS 적용하기",
        "content": "HTML과 CSS는 함께 사용되어 웹 페이지의 구조와 스타일을 정의합니다. HTML로 구조를 잡은 후, CSS를 사용하여 시각적 스타일을 추가할 수 있습니다. 예를 들어, style 태그를 사용하여 HTML 문서 내에 직접 CSS를 작성하거나, 외부 스타일시트를 link 태그를 사용해 불러올 수 있습니다. 이를 통해 텍스트의 색상, 크기, 폰트, 배경색, 레이아웃 등을 제어할 수 있습니다.",
        "summary": "CSS로 HTML 스타일링하기",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#HTML, #CSS, #WebDesign",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML4.jpg"
    },
    {
        "id": 5,
        "category": "CSS",
        "title": "CSS란?",
        "content": "CSS는 웹 페이지의 스타일을 지정하는 언어입니다. CSS는 Cascading Style Sheets의 약자로, HTML 요소의 외관을 정의하는 데 사용됩니다. CSS는 선택자와 선언 블록으로 구성되며, 선언 블록은 속성과 값으로 구성됩니다.",
        "summary": "CSS: Cascading Style Sheets",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Learn, #Code, #CSS",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/css/CSS1.jpg"
    },
    {
        "id": 6,
        "category": "CSS",
        "title": "CSS 선택자 종류",
        "content": "CSS 선택자는 HTML 요소를 선택하여 스타일을 적용하는 방법입니다. 기본 선택자로는 태그 선택자, 클래스 선택자, 아이디 선택자가 있습니다. 또한 속성 선택자, 의사 클래스 및 의사 요소 선택자도 사용됩니다. 이러한 선택자들을 조합하여 복잡한 스타일을 정의할 수 있습니다.",
        "summary": "CSS 선택자 종류와 사용법",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Learn, #Code, #CSS",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/css/CSS2.jpg"
    },
    {
        "id": 7,
        "category": "CSS",
        "title": "CSS 레이아웃 기법",
        "content": "CSS 레이아웃 기법에는 여러 가지가 있습니다. 그리드 레이아웃, 플렉스박스 레이아웃, 플로트, 포지셔닝 등이 있습니다. 각 레이아웃 기법은 특정 상황에서 유용하며, 이를 통해 복잡한 웹 페이지 레이아웃을 효율적으로 구현할 수 있습니다.",
        "summary": "다양한 CSS 레이아웃 기법",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#CSS, #Layout, #WebDesign",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/css/CSS3.jpg"
    },
    {
        "id": 8,
        "category": "CSS",
        "title": "미디어 쿼리를 사용한 반응형 디자인",
        "content": "미디어 쿼리는 CSS에서 반응형 디자인을 구현하는 데 사용됩니다. 이를 통해 화면 크기에 따라 스타일을 다르게 적용할 수 있습니다. 미디어 쿼리는 @media 규칙을 사용하며, 디바이스의 너비, 높이, 해상도 등을 기준으로 조건을 설정할 수 있습니다.",
        "summary": "반응형 웹 디자인과 미디어 쿼리",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#CSS, #Responsive, #WebDesign",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/css/CSS4.jpg"
    },
    {
        "id": 9,
        "category": "JAVASCRIPT",
        "title": "JavaScript란?",
        "content": "JavaScript는 웹 페이지에 동적 기능을 추가하는 프로그래밍 언어입니다. JavaScript는 클라이언트 측 스크립팅 언어로, HTML과 CSS와 함께 웹의 핵심 기술 중 하나입니다. 이를 통해 사용자와 상호 작용하는 다양한 기능을 구현할 수 있습니다.",
        "summary": "JavaScript: 웹의 동적 기능 언어",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Learn, #Code, #JavaScript",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/javascript/JS1.jpg"
    },
    {
        "id": 10,
        "category": "JAVASCRIPT",
        "title": "JavaScript 변수와 데이터 타입",
        "content": "JavaScript에서 변수를 선언하는 방법은 var, let, const 키워드를 사용하는 것입니다. 각 키워드는 변수의 스코프와 재할당 가능 여부에 따라 다르게 사용됩니다. JavaScript는 동적 타입 언어로, 문자열, 숫자, 불리언, 객체, 배열 등 다양한 데이터 타입을 지원합니다.",
        "summary": "JavaScript 변수와 데이터 타입 개요",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#JavaScript, #Variables, #DataTypes",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/javascript/JS2.jpg"
    },
    {
        "id": 11,
        "category": "JAVASCRIPT",
        "title": "JavaScript 함수",
        "content": "JavaScript 함수는 코드 블록을 정의하고 재사용하는 데 사용됩니다. 함수 선언식과 함수 표현식 두 가지 방법으로 함수를 정의할 수 있습니다. 또한 화살표 함수는 간결한 문법을 제공하여 더욱 간편하게 함수를 작성할 수 있게 해줍니다.",
        "summary": "JavaScript 함수 정의 및 사용법",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#JavaScript, #Functions, #Coding",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/javascript/JS3.jpg"
    },
    {
        "id": 12,
        "category": "JAVASCRIPT",
        "title": "DOM 조작",
        "content": "JavaScript를 사용하여 HTML 문서의 구조, 스타일 및 내용을 동적으로 변경할 수 있습니다. DOM(Document Object Model)은 웹 페이지의 구조를 트리 형태로 표현한 것으로, JavaScript는 이를 통해 페이지의 요소를 선택하고 조작할 수 있습니다. 예를 들어, document.getElementById() 메서드를 사용하여 특정 요소를 선택하고, innerHTML 속성을 사용하여 해당 요소의 내용을 변경할 수 있습니다.",
        "summary": "JavaScript를 사용한 DOM 조작",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#JavaScript, #DOM, #WebDevelopment",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/javascript/JS4.jpg"
    },
    {
        "id": 13,
        "category": "JAVASCRIPT",
        "title": "비동기 JavaScript: 콜백, 프라미스, async/await",
        "content": "비동기 프로그래밍은 JavaScript에서 매우 중요한 개념입니다. 비동기 작업을 처리하기 위해 콜백 함수, 프라미스, async/await를 사용할 수 있습니다. 콜백 함수는 비동기 작업이 완료된 후 실행되는 함수입니다. 프라미스는 비동기 작업의 완료 또는 실패를 처리하는 객체입니다. async/await는 비동기 작업을 더욱 간단하고 직관적으로 작성할 수 있게 해줍니다.",
        "summary": "비동기 JavaScript 개념 및 사용법",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#JavaScript, #Async, #Programming",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/javascript/JS5.jpg"
    },
    {
        "id": 14,
        "category": "REACT",
        "title": "React 컴포넌트 기초",
        "content": "React 컴포넌트는 UI를 구성하는 기본 단위입니다. 함수형 컴포넌트와 클래스형 컴포넌트의 차이점과 사용법을 설명합니다. 또한 props와 state를 사용하여 동적인 데이터를 관리하는 방법을 다룹니다.",
        "summary": "React 컴포넌트 이해하기",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#React, #Components, #WebDevelopment",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/react/React2.jpg"
    },
    {
        "id": 15,
        "category": "REACT",
        "title": "React 훅 사용법",
        "content": "React 훅은 함수형 컴포넌트에서 state와 라이프사이클 기능을 사용할 수 있게 해줍니다. useState, useEffect 등 자주 사용되는 훅에 대해 설명하고, 이를 통해 상태를 관리하고 사이드 이펙트를 처리하는 방법을 다룹니다.",
        "summary": "React 훅으로 상태 관리하기",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#React, #Hooks, #WebDevelopment",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/react/React3.jpg"
    },
    {
        "id": 16,
        "category": "REACT",
        "title": "React 라우터 사용하기",
        "content": "React 라우터는 SPA(Single Page Application)에서 라우팅을 관리하는 라이브러리입니다. React Router를 사용하여 여러 페이지를 관리하고, 동적 라우팅을 구현하는 방법을 설명합니다.",
        "summary": "React 라우터로 SPA 구현하기",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#React, #Router, #SPA",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/react/React4.jpg"
    },
    {
        "id": 17,
        "category": "GITHUB",
        "title": "GitHub란?",
        "content": "GitHub는 소스 코드 관리를 위한 플랫폼입니다. Git을 기반으로 하며, 버전 관리를 통해 코드 변경 사항을 추적하고 협업할 수 있습니다. GitHub를 사용하면 리포지토리를 생성하고, 브랜치를 관리하며, 풀 리퀘스트를 통해 코드 리뷰를 받을 수 있습니다.",
        "summary": "GitHub: 소스 코드 관리 플랫폼",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#GitHub, #VersionControl, #Collaboration",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/github/GitHub1.jpg"
    },
    {
        "id": 18,
        "category": "GITHUB",
        "title": "GitHub 리포지토리 생성하기",
        "content": "GitHub에서 새로운 리포지토리를 생성하는 방법을 설명합니다. 리포지토리를 생성하고, 초기 설정을 하며, README 파일을 작성하는 과정을 다룹니다. 또한 .gitignore 파일을 사용하여 추적하지 않을 파일을 지정하는 방법도 설명합니다.",
        "summary": "GitHub 리포지토리 설정하기",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#GitHub, #Repository, #Setup",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/github/GitHub2.jpg"
    },
    {
        "id": 19,
        "category": "GITHUB",
        "title": "GitHub 브랜치 사용법",
        "content": "브랜치는 독립적인 작업을 가능하게 합니다. 새로운 브랜치를 생성하고, 브랜치 간 변경 사항을 병합하는 방법을 설명합니다. 또한 충돌을 해결하는 방법과 브랜치를 삭제하는 방법을 다룹니다.",
        "summary": "GitHub 브랜치 관리",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#GitHub, #Branching, #VersionControl",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/github/GitHub3.jpg"
    },
    {
        "id": 20,
        "category": "GITHUB",
        "title": "GitHub 풀 리퀘스트 사용법",
        "content": "풀 리퀘스트는 코드 변경 사항을 리뷰하고 병합하기 위한 도구입니다. 풀 리퀘스트를 생성하고, 리뷰를 요청하며, 피드백을 반영하여 병합하는 과정을 설명합니다. 또한 코드 리뷰의 중요성과 베스트 프랙티스를 다룹니다.",
        "summary": "효과적인 풀 리퀘스트 관리",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#GitHub, #PullRequest, #CodeReview",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/github/GitHub4.jpg"
    },
    {
        "id": 21,
        "category": "CERTIFICATE",
        "title": "정보처리기사 자격증이란?",
        "content": "정보처리기사 자격증은 정보기술(IT) 분야의 전문성을 인정받기 위한 국가 자격증입니다. 이 자격증을 취득하면 IT 시스템의 설계, 개발, 운영, 유지보수 등의 업무를 수행할 수 있는 능력을 갖추게 됩니다.",
        "summary": "정보처리기사 자격증 소개",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Certification, #IT, #Professional",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/certificate/Cert1.jpg"
    },
    {
        "id": 22,
        "category": "CERTIFICATE",
        "title": "정보처리기사 시험 과목",
        "content": "정보처리기사 시험은 필기와 실기로 나뉘어 있으며, 각 과목의 주요 내용을 설명합니다. 필기 시험은 데이터베이스, 전자계산기 구조, 운영체제, 소프트웨어 공학, 데이터 통신 등이 포함됩니다. 실기 시험은 시스템 개발 프로젝트를 중심으로 구성됩니다.",
        "summary": "정보처리기사 시험 과목 소개",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Certification, #Exam, #Subjects",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/certificate/Cert2.jpg"
    },
    {
        "id": 23,
        "category": "CERTIFICATE",
        "title": "정보처리기사 준비 방법",
        "content": "정보처리기사 자격증을 준비하는 방법에 대해 알아봅니다. 효율적인 공부 계획 세우기, 추천 교재와 온라인 강의, 기출 문제 풀이 등의 방법을 다룹니다.",
        "summary": "정보처리기사 준비 팁",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Certification, #Preparation, #StudyTips",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/certificate/Cert3.jpg"
    },
    {
        "id": 24,
        "category": "CERTIFICATE",
        "title": "정보처리기사 합격 후 진로",
        "content": "정보처리기사 자격증을 취득한 후의 다양한 진로를 소개합니다. IT 기업, 공공기관, 연구소 등에서의 취업 기회와 커리어 발전 가능성을 설명합니다.",
        "summary": "정보처리기사 합격 후의 진로",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#Certification, #Career, #ITJobs",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/certificate/Cert4.jpg"
    },
    {
        "id": 25,
        "category": "HTML",
        "title": "HTML 폼 요소",
        "content": "HTML 폼은 사용자로부터 데이터를 입력받기 위한 다양한 요소들을 제공합니다. 기본적인 폼 요소로는 select등이 있으며, 이를 통해 텍스트 입력, 여러 줄 입력, 버튼 클릭, 드롭다운 메뉴 선택 등 다양한 입력 방식을 구현할 수 있습니다.",
        "summary": "HTML 폼을 통해 사용자 입력받기",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#HTML, #Form, #UserInput",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML5.jpg"
    },
    {
        "id": 26,
        "category": "REACT",
        "title": "React란?",
        "content": "React는 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리입니다. 컴포넌트 기반 아키텍처를 사용하여 복잡한 UI를 효율적으로 관리할 수 있습니다. Facebook에서 개발한 React는 현재 많은 웹 애플리케이션에서 사용되고 있습니다.",
        "summary": "React: UI 라이브러리",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#React, #JavaScript, #UI",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/react/React1.jpg"
    },
    {
        "id": 27,
        "category": "HTML",
        "title": "HTML 시맨틱 요소",
        "content": "HTML5에서는 웹 페이지의 의미와 구조를 더 잘 표현하기 위해 새로운 시맨틱 요소들이 도입되었습니다. header, footer, article, section, aside, nav 등은 문서의 특정 부분을 의미적으로 구분하는 데 사용됩니다. 이를 통해 검색 엔진 최적화(SEO)와 접근성을 향상시킬 수 있습니다.",
        "summary": "HTML5의 시맨틱 요소 소개",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#HTML5, #Semantic, #SEO",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML6.jpg"
    },
    {
        "id": 28,
        "category": "HTML",
        "title": "HTML5 오디오 및 비디오",
        "content": "HTML5는 멀티미디어 콘텐츠를 손쉽게 통합할 수 있는 audio와 video 요소를 도입했습니다. 이를 통해 플러그인 없이도 브라우저에서 직접 오디오와 비디오를 재생할 수 있으며, 다양한 속성과 이벤트를 통해 제어가 가능합니다.",
        "summary": "HTML5의 오디오 및 비디오 요소",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#HTML5, #Audio, #Video",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML7.jpg"
    },
    {
        "id": 29,
        "category": "HTML",
        "title": "HTML 링크와 앵커",
        "content": "HTML에서 링크는 a 태그를 사용하여 생성됩니다. 앵커는 하이퍼텍스트 링크를 정의하는 요소로, 다른 웹 페이지, 동일한 페이지 내의 특정 섹션, 이메일 주소, 파일 다운로드 링크 등으로 연결할 수 있습니다.",
        "summary": "HTML 링크와 앵커 태그 사용법",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#HTML, #Link, #Anchor",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML8.jpg"
    },
    {
        "id": 30,
        "category": "HTML",
        "title": "HTML 테이블 요소",
        "content": "HTML 테이블은 데이터를 행과 열의 형식으로 구성하여 표시합니다. table 태그는 테이블을 정의하고, tr 태그는 행을, td 태그는 셀을, th 태그는 헤더 셀을 정의합니다. 이를 통해 정렬된 데이터 표를 만들 수 있습니다.",
        "summary": "HTML 테이블로 데이터 정렬하기",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#HTML, #Table, #Data",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML9.jpg"
    },
    {
        "id": 31,
        "category": "HTML",
        "title": "HTML 메타데이터",
        "content": "HTML 문서의 head 섹션에는 메타데이터를 포함할 수 있습니다. meta 태그는 문서의 문자 인코딩, 저자, 키워드, 설명 등의 정보를 정의하는 데 사용됩니다. 이러한 메타데이터는 검색 엔진 최적화(SEO)에 중요한 역할을 합니다.",
        "summary": "HTML 메타데이터 태그 설명",
        "author_nickName": "ADDKKD",
        "created_at": "2024-06-04 09:57:12",
        "updated_at": "2024-06-04 09:57:12",
        "tags": "#HTML, #Metadata, #SEO",
        "views": 0,
        "likes": 0,
        "comments_count": 0,
        "thumbnail_url": "https://eogks0218.github.io/DH_StudyNote/image/html/HTML10.jpg"
    }
]